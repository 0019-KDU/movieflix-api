version: 0.2

phases:
  pre_build:
    commands:
      - echo "Installing dependencies and building the project..."
      - mvn clean install
      - echo "Starting Docker Compose services..."
      - docker-compose --version  # Verifies Docker Compose is installed
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=423623837471.dkr.ecr.eu-north-1.amazonaws.com/movie-api
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo "Build started on $(date)"
      - echo "Building the Docker image using Docker Compose..."
      - docker-compose build  # Use Docker Compose to build the image
      - docker tag movie-api:latest $REPOSITORY_URI:latest
      - docker tag movie-api:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Build completed on $(date)"
      - echo "Pushing the Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - DOCKER_CONTAINER_NAME=movie-api
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Printing imagedefinitions.json..."
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
